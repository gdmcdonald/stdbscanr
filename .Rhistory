use_mit_license("Gordon McDonald")
library(usethis)
use_mit_license("Gordon McDonald")
use_package("data.table", "Imports")
use_readme_md()
use_test("my-test")
message(3)
message(3,"hi")
message(3->x,"hi")
message(iter_count," iterations to equilibrium cluster configuration\n")
message(x," iterations to equilibrium cluster configuration\n")
source('~/Documents/FreshSIH/stdbscanr/R/find_connected_points.R')
source('~/Documents/FreshSIH/stdbscanr/R/find_connected_points.R')
View(get_clusters_from_data)
devtools::load_all(".")
devtools::load_all(".")
?get_cluste1rs_from_data
?get_clusters_from_data
?demo_data
demo_data(10)
library(data.table)
demo_data(10)
dt<-demo_data(10)
View(dt)
#' Create demo data to test clustering algorithm
#'
#' @param n number of rows in demo data
#'
#' @return A new data.table with `n` rows to feed into the clustering algorithm
#' @export
#'
#' @examples
#' demo_data(n = 1000)
demo_data <- function(n = 1000){
dt = data.table(id = 1:n,
timestamp = 1:n,
X = rnorm(n),
Y = rnorm(n))
}
dt<-demo_data(10)
dt = data.table(timestamp = 1:n,
X = rnorm(n),
Y = rnorm(n))
#' Create demo data to test clustering algorithm
#'
#' @param n number of rows in demo data
#'
#' @return A new data.table with `n` rows to feed into the clustering algorithm
#' @export
#'
#' @examples
#' demo_data(n = 1000)
demo_data <- function(n = 1000){
dt = data.table(timestamp = 1:n,
X = rnorm(n),
Y = rnorm(n))
}
dt<-demo_data(10)
get_clusters_from_data(dt)
get_clusters_from_datadf = (dt)
get_clusters_from_data(df = dt)
get_clusters_from_datadf = (dt)
out <- get_clusters_from_data(df = dt)
setkeyv(dt,cols = c("Y"))
View(dt)
out <- get_clusters_from_data(df = dt)
dt<-demo_data(10)
devtools::load_all(".")
dt<-demo_data(10)
library(data.table)
dt<-demo_data(10)
out <- get_clusters_from_data(df = dt)
debug(out <- get_clusters_from_data(df = dt))
debug(out <- get_clusters_from_data(df = dt))
dt[,id:=.I]
View(dt)
install.packages("data.table")
install.packages("data.table")
library(data.table)
devtools::load_all(".")
dt<-demo_data(10)
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
?`:=`
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
devtools::load_all(".")
out <- get_clusters_from_data(df = dt)
out <- get_clusters_from_data(df = demo_data(n=1000))
out <- get_clusters_from_data(df = demo_data(n=1000))
out <- get_clusters_from_data(df = demo_data(n=1000))
out <- get_clusters_from_data(df = demo_data(n=1000),eps = 2,eps_t = 10, minpts = 3)
devtools::load_all(".")
out <- get_clusters_from_data(df = demo_data(n=1000))
devtools::load_all(".")
out <- get_clusters_from_data(df = demo_data(n=1000))
devtools::load_all(".")
out <- get_clusters_from_data(df = demo_data(n=1000))
devtools::load_all(".")
out <- get_clusters_from_data(df = demo_data(n=1000),eps = 2,eps_t = 10, minpts = 3)
View(out)
View(out)
x<- c(1,5,72,9462)
order(x)
x<- c(1,5,72,9462, 3)
order(x)
unique(out$cluster)
na.omit(unique(out$cluster))
out <- get_clusters_from_data(df = demo_data(n=10000),eps = 1,eps_t = 10, minpts = 3)
unique(out$cluster)
na.omit(unique(out$cluster))
cluster_numbers_old <- na.omit(unique(out$cluster))
cluster_numbers_new <- 1:length(cluster_numbers_old)
names(cluster_numbers_new) <- cluster_numbers_old
out[,cluster_new:=cluster_numbers_new[cluster]]
View(out)
cluster_numbers_new
out[,cluster_new:=cluster_numbers_new[as.character(cluster)]]
View(out)
devtools::load_all(".")
out <- get_clusters_from_data(df = demo_data(n=10000),eps = 1,eps_t = 10, minpts = 3)
View(out)
devtools::load_all(".")
out <- get_clusters_from_data(df = demo_data(n=10000),eps = 1,eps_t = 10, minpts = 3)
devtools::load_all(".")
devtools::load_all(".")
out <- get_clusters_from_data(df = demo_data(n=10000),eps = 1,eps_t = 10, minpts = 3)
devtools::load_all(".")
out <- get_clusters_from_data(df = demo_data(n=10000),eps = 1,eps_t = 10, minpts = 3)
devtools::load_all(".")
out <- get_clusters_from_data(df = demo_data(n=10000),eps = 1,eps_t = 10, minpts = 3)
source('~/Documents/FreshSIH/stdbscanr/R/find_connected_points.R')
